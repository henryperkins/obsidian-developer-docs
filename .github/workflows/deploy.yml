name: Deploy to Cloudflare Worker

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build VitePress documentation
        run: |
          npm run build
          echo "Build complete, copying to worker..."

      - name: Copy built assets to Worker
        run: |
          mkdir -p worker/public
          cp -r en/.vitepress/dist/* worker/public/
          echo "Assets copied to worker/public"

      - name: Install Worker dependencies
        working-directory: ./worker
        run: npm install

      - name: Deploy Worker with static assets
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: worker
          command: deploy
        env:
          RAG_ID: obsidian-docs
          INGESTION_TOKEN: ${{ secrets.INGESTION_TOKEN }}
          # Optional: External LLM configuration
          USE_EXTERNAL_LLM: ${{ vars.USE_EXTERNAL_LLM }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          AZURE_OPENAI_ENDPOINT: ${{ secrets.AZURE_OPENAI_ENDPOINT }}
          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
          AZURE_OPENAI_API_VERSION: ${{ secrets.AZURE_OPENAI_API_VERSION }}

  # Optional: Ingest documentation to AutoRAG after deployment
  ingest-docs:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for Worker deployment
        run: sleep 30

      - name: Ingest documentation
        run: |
          echo "Ingesting documentation to AutoRAG..."
          # Use the existing ingestion script if available
          # Or trigger via the Worker's /api/ingest endpoint
        env:
          WORKER_URL: https://obsidian-docs-autorag.${{ secrets.CLOUDFLARE_ACCOUNT_ID }}.workers.dev
          INGESTION_TOKEN: ${{ secrets.INGESTION_TOKEN }}